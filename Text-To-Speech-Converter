import tkinter as tk
from tkinter import ttk
import subprocess

# Install required libraries
try:
    import gtts
    import pyttsx3
except ImportError:
    print("Installing required libraries...")
    try:
        import subprocess
        subprocess.check_call(['python', '-m', 'pip', 'install', 'gtts', 'pyttsx3'])
        print("Libraries installed successfully!")
        import gtts
        import pyttsx3
    except Exception as e:
        print(f"Error installing libraries: {e}")
        exit()

class TextToSpeechApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Text to Speech Converter")

        # Text Input
        self.text_input = tk.Text(self.root, wrap="word", height=10, width=40)
        self.text_input.grid(row=0, column=0, columnspan=4, padx=10, pady=10)

        # Voice Selection
        self.voice_label = tk.Label(self.root, text="Select Voice:")
        self.voice_label.grid(row=1, column=0, padx=10, pady=5)
        self.voices = self.get_available_voices()
        self.voice_var = tk.StringVar()
        self.voice_dropdown = ttk.Combobox(self.root, textvariable=self.voice_var, values=self.voices)
        self.voice_dropdown.grid(row=1, column=1, padx=10, pady=5)
        self.voice_dropdown.set(self.voices[0])  # Set the default voice

        # Speech Rate Adjustment
        self.rate_label = tk.Label(self.root, text="Speech Rate:")
        self.rate_label.grid(row=1, column=2, padx=10, pady=5)
        self.rate_var = tk.StringVar()
        self.rate_entry = tk.Entry(self.root, textvariable=self.rate_var)
        self.rate_entry.grid(row=1, column=3, padx=10, pady=5)
        self.rate_var.set("150")  # Set the default speech rate

        # Convert Button
        self.convert_button = tk.Button(self.root, text="Convert to Speech", command=self.convert_text)
        self.convert_button.grid(row=2, column=0, columnspan=4, pady=10)

    def get_available_voices(self):
        engine = pyttsx3.init()
        voices = engine.getProperty('voices')
        return [voice.name for voice in voices]

    def convert_text(self):
        text = self.text_input.get("1.0", "end-1c")
        voice = self.voice_var.get()
        rate = int(self.rate_var.get())

        # Using gtts for saving as an MP3 file
        tts_gtts = gtts.gTTS(text=text, lang='en', slow=False)
        tts_gtts.save("output.mp3")

        # Using pyttsx3 for immediate playback
        engine = pyttsx3.init()
        engine.setProperty('voice', voice)
        engine.setProperty('rate', rate)
        engine.say(text)
        engine.runAndWait()

if __name__ == "__main__":
    root = tk.Tk()
    app = TextToSpeechApp(root)
    root.mainloop()
